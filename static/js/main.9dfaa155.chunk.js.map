{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","audioFile","setAudioFile","useState","transcriptFile","setTranscriptFile","React","createElement","style","textAlign","type","accept","onChange","event","target","files","disabled","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,4GC4B5BC,MAxBf,WACE,MAAOC,EAAWC,GAAgBC,mBAAS,OACpCC,EAAgBC,GAAqBF,mBAAS,MAUrD,OACEG,IAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,WACvBH,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAOG,KAAK,OAAOC,OAAO,UAAUC,SAXbC,IACzBX,EAAaW,EAAMC,OAAOC,MAAM,OAW9BT,IAAAC,cAAA,SAAOG,KAAK,OAAOC,OAAO,YAAYC,SARVC,IAC9BR,EAAkBQ,EAAMC,OAAOC,MAAM,OAQnCT,IAAAC,cAAA,UAAQS,UAAWf,IAAcG,GAAgB,sBCTxCa,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,IAAAC,cAACD,IAAM0B,WAAU,KACf1B,IAAAC,cAACP,EAAG,QAORiB,M","file":"static/js/main.9dfaa155.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [audioFile, setAudioFile] = useState(null);\n  const [transcriptFile, setTranscriptFile] = useState(null);\n\n  const handleAudioUpload = (event) => {\n    setAudioFile(event.target.files[0]);\n  };\n\n  const handleTranscriptUpload = (event) => {\n    setTranscriptFile(event.target.files[0]);\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Audio-Transcript Sync</h1>\n      <input type=\"file\" accept=\"audio/*\" onChange={handleAudioUpload} />\n      <input type=\"file\" accept=\".txt,.srt\" onChange={handleTranscriptUpload} />\n      <button disabled={!audioFile || !transcriptFile}>\n        Process and Sync\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}